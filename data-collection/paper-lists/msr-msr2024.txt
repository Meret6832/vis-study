a large-scale empirical study of open source license usage: practices and challenges
a mutation-guided assessment of acceleration approaches for continuous integration: an empirical study of yourbase
an empirical study on just-in-time conformal defect prediction
an investigation of patch porting practices of the linux kernel ecosystem
analyzing the evolution and maintenance of ml models on hugging face
apistic: a large collection of openapi metrics
are latent vulnerabilities hidden gems for software vulnerability prediction? an empirical study
automating gui-based test oracles for mobile apps
availability and usage of platform-specific apis: a first empirical study
boosting api misuse detection via integrating api constraints from multiple sources
comparing apples to androids: discovery, retrieval, and matching of ios and android apps for cross-platform analyses
crashjs: a nodejs benchmark for automated crash reproduction
data augmentation for supervised code translation learning
drminer: a tool for identifying and analyzing refactorings in dockerfile
encoding version history context for better code representation
enhancing performance bug prediction using performance code metrics
exploring the effect of multiple natural languages on code suggestion using github copilot
fine-grained just-in-time defect prediction at the block level in infrastructure-as-code (iac)
girt-model: automated generation of issue report templates
global prosperity or local monopoly? understanding the geography of app popularity
guievo: automated evolution of mobile app uis
how do machine learning projects use continuous integration practices? an empirical study on github actions
improving automated code reviews: learning from experience
keep me updated: an empirical study on embedded javascript engines in android apps
large language model vs. stack overflow in addressing android permission related challenges
learning to predict and improve build successes in package ecosystems
leveraging gpt-like llms to automate issue labeling
microrec: leveraging large language models for microservice recommendation
not all dockerfile smells are the same: an empirical evaluation of hadolint writing practices by experts
on the anatomy of real-world r code for static analysis
on the effectiveness of machine learning-based call-graph pruning: an empirical study
on the executability of r markdown files
options matter: documenting and fixing non-reproducible builds in highly-configurable systems
peatmoss: a dataset and initial analysis of pre-trained models in open-source software
quantifying security issues in reusable javascript actions in github workflows
supporting high-level to low-level requirements coverage reviewing with large language models
the impact of code ownership of devops artefacts on the outcome of devops ci builds
thirty-three years of mathematicians and software engineers: a case study of domain expertise and participation in proof assistant ecosystems
unveiling chatgpt's usage in open source projects: a mining-based study
what can self-admitted technical debt tell us about security? a mixed-methods study
whodunit: classifying code as human authored or gpt-4 generated - a case study on codechef problems